name: Build and test

on:
  push:
    branches: [develop, main]

jobs:
  test:
    name: Test task ${{ matrix.task }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [
            # delete-adf-items,
            deploy-adf-json,
          ]
    # toggle-adf-trigger,
    # trigger-adf-pipeline,
    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: npm install
        run: |
          npm install
        working-directory: ${{ matrix.task }}/v2
        env:
          CI: true
      - name: npm run test
        run: |
          npm run test
        working-directory: ${{ matrix.task }}/v2
        env:
          CI: true
  build:
    name: Build task ${{ matrix.task }}
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task:
          [
            delete-adf-items,
            deploy-adf-json,
            toggle-adf-trigger,
            trigger-adf-pipeline,
          ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: install modclean
        run: |
          npm install modclean
        env:
          CI: true
      - name: npm install
        run: |
          npm install
        working-directory: ${{ matrix.task }}/v2
        env:
          CI: true
      - name: npm run build
        run: |
          npm run build
        working-directory: ${{ matrix.task }}/v2
        env:
          CI: true
      - name: rm node_modules
        run: |
          rm -Rf node_modules
        working-directory: ${{ matrix.task }}/v2
        env:
          CI: true
      - name: npm install --production
        run: |
          npm install --production
        working-directory: ${{ matrix.task }}/v2
        env:
          CI: true
      - name: npx modclean
        run: |
          ./node_modules/.bin/modclean -r -n default:safe,default:caution
      - name: store task artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.task }}
          path: |
            ${{ matrix.task }}/v2/
  pack:
    name: Pack 'vsts-publish-adf'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: install tfx-cli
        run: |
          npm install tfx-cli
          export PATH=./node_modules/.bin:$PATH
        env:
          CI: true
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
      - name: run tfx-cli
        run: |
          tfx extension create --manifest-globs ./vss-extension.json
