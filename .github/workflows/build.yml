name: Build and test

on:
  push:
    branches: [develop, main]

jobs:
  test:
    name: Test task ${{ matrix.task }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [
            # delete-adf-items,
            deploy-adf-json,
          ]
    # toggle-adf-trigger,
    # trigger-adf-pipeline,
    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: npm install
        run: |
          npm install
        working-directory: ${{ matrix.task }}/v2
        env:
          CI: true
      - name: npm run test
        run: |
          npm run test
        working-directory: ${{ matrix.task }}/v2
        env:
          CI: true
  build:
    name: Build and pack tasks
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: install modclean
        run: |
          npm install modclean
        env:
          CI: true
      - name: build tasks
        run: |
          tasks=./**/v2
          for task in $tasks
          do
            echo Build $task
            cd $task
            npm install
            npm run build
            echo Prepare 'node_modules' of $task
            rm -Rf node_modules
            npm install --production
            $GITHUB_WORKSPACE/node_modules/.bin/modclean -r -n default:safe,default:caution
            cd $GITHUB_WORKSPACE
          done
      - name: install tfx-cli
        run: |
          npm install tfx-cli
        env:
          CI: true
      - name: run tfx-cli
        run: |
          $GITHUB_WORKSPACE/node_modules/.bin/tfx extension create --manifest-globs $GITHUB_WORKSPACE/vss-extension.json
      - name: extract version name
        id: extract_version
        run: |
          node -e "const v = require('./vss-extension.json').version;console.log('::set-output name=version::' + v);"
      - name: store extension
        uses: actions/upload-artifact@v2
        with:
          name: liprec.vsts-publish-adf-${{extensionversion}}
          path: |
            liprec.vsts-publish-adf-${{extensionversion}}.vsix
